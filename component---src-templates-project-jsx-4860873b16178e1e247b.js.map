{"version":3,"sources":["webpack:///./src/components/Suggestions.jsx","webpack:///./src/templates/project.jsx"],"names":["Suggestions","left","right","className","to","fields","slug","frontmatter","title","Project","pageContext","postNode","data","markdownRemark","post","fluid","landscape","childImageSharp","id","postPath","postSEO","customer","task","company","activities","type","input","html","pageQuery"],"mappings":"4FAAA,qCA4CeA,IAxCK,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,MAAT,OAElB,yBAAKC,UAAU,+BAEZF,GACC,kBAAC,IAAD,CAAME,UAAU,mBAAmBC,GAAIH,EAAKI,OAAOC,MAEjD,6BAASH,UAAU,wBAEjB,yBAAKA,UAAU,uBACb,wBAAIA,UAAU,qBACXF,EAAKM,YAAYC,UAS3BN,GACC,kBAAC,IAAD,CAAMC,UAAU,mBAAmBC,GAAIF,EAAMG,OAAOC,MAElD,6BAASH,UAAU,wBAEjB,yBAAKA,UAAU,uBACb,wBAAIA,UAAU,qBACXD,EAAMK,YAAYC,a,kCC/BjC,6IAuEeC,UA5DC,SAAC,GAAgF,IAAD,IAA7EC,YAAeJ,EAA8D,EAA9DA,KAAML,EAAwD,EAAxDA,KAAMC,EAAkD,EAAlDA,MAAiCS,EAAiB,EAAzCC,KAAQC,eACvDC,EAAOH,EAASJ,YACdQ,EAAUD,EAAKE,UAAUC,gBAAzBF,MAIR,OAHKD,EAAKI,KACRJ,EAAKI,GAAKZ,GAGV,kBAAC,IAAD,KAEE,kBAAC,IAAD,CAAKa,SAAUb,EAAMK,SAAUA,EAAUS,SAAO,IAEhD,yBAAKjB,UAAU,cAEb,wBAAIA,UAAU,iBACZ,wBAAIA,UAAU,sBACZ,sCACCW,EAAKO,UAER,wBAAIlB,UAAU,sBACZ,oCACCW,EAAKQ,MAER,wBAAInB,UAAU,sBACZ,oCACCW,EAAKS,UAIV,6BAASpB,UAAU,gBACjB,kBAAC,IAAD,CAAKY,MAAOA,KAGd,6BAASZ,UAAU,WACjB,yBAAKA,UAAU,8BACb,wBAAIA,UAAU,kBAAd,cACA,2BACGW,EAAKU,cAKZ,yBAAKrB,UAAU,aACb,6BAASA,UAAU,uBAAuBsB,KAAK,WAC7C,kBAAC,IAAD,CAASC,MAAOf,EAASgB,SAI7B,iCACE,wBAAIxB,UAAU,yBAAd,iBAGA,kBAAC,IAAD,CAAaF,KAAMA,EAAMC,MAAOA,QAoBnC,IAAM0B,EAAS","file":"component---src-templates-project-jsx-4860873b16178e1e247b.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\n\nconst Suggestions = ({ left, right }) => (\n\n  <div className=\"post-block post-block--half\">\n\n    {left && (\n      <Link className=\"post-block__item\" to={left.fields.slug}>\n\n        <article className=\"post-block__bordered\">\n\n          <div className=\"post-block__content\">\n            <h2 className=\"post-block__title\">\n              {left.frontmatter.title}\n            </h2>\n          </div>\n\n        </article>\n\n      </Link>\n    )}\n\n    {right && (\n      <Link className=\"post-block__item\" to={right.fields.slug}>\n\n        <article className=\"post-block__bordered\">\n\n          <div className=\"post-block__content\">\n            <h2 className=\"post-block__title\">\n              {right.frontmatter.title}\n            </h2>\n          </div>\n\n        </article>\n\n      </Link>\n    )}\n\n  </div>\n\n);\n\nexport default Suggestions;\n\nSuggestions.propTypes = {\n  left: PropTypes.any.isRequired,\n  right: PropTypes.any.isRequired,\n};\n","/* eslint max-len: 0 */\n/* eslint react/no-unescaped-entities: 0 */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Img from 'gatsby-image';\nimport { Link, graphql } from 'gatsby';\nimport Header from '../components/Header';\nimport { SEO, Content, Layout } from 'elements';\nimport Suggestions from '../components/Suggestions';\n\nconst Project = ({ pageContext: { slug, left, right }, data: { markdownRemark: postNode } }) => {\n  const post = postNode.frontmatter;\n  const { fluid } = post.landscape.childImageSharp;\n  if (!post.id) {\n    post.id = slug;\n  }\n  return (\n    <Layout>\n\n      <SEO postPath={slug} postNode={postNode} postSEO />\n\n      <div className=\"page-inner\">\n\n        <ul className=\"project__meta\">\n          <li className=\"project__meta-item\">\n            <h1>Client</h1>\n            {post.customer}\n          </li>\n          <li className=\"project__meta-item\">\n            <h1>Role</h1>\n            {post.task}\n          </li>\n          <li className=\"project__meta-item\">\n            <h1>Team</h1>\n            {post.company}\n          </li>\n        </ul>\n\n        <section className=\"project__img\">\n          <Img fluid={fluid} />\n        </section>\n\n        <section className=\"callout\">\n          <div className=\"page-content align-central\">\n            <h2 className=\"callout__title\">Activities</h2>\n            <p>\n              {post.activities}\n            </p>\n          </div>\n        </section>\n\n        <div className=\"page-text\">\n          <article className=\"content page-content\" type=\"article\">\n            <Content input={postNode.html} />\n          </article>\n        </div>\n\n        <section>\n          <h3 className=\"heading align-central\">\n            More Projects\n          </h3>\n          <Suggestions left={left} right={right} />\n        </section>\n\n      </div>\n\n    </Layout>\n  );\n};\n\nexport default Project;\n\nProject.propTypes = {\n  pageContext: PropTypes.shape({\n    slug: PropTypes.string.isRequired,\n  }).isRequired,\n  data: PropTypes.shape({\n    markdownRemark: PropTypes.object.isRequired,\n  }).isRequired,\n};\n\nexport const pageQuery = graphql`\n  query ProjectPostBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        date(formatString: \"DD.MM.YYYY\")\n        customer\n        task\n        company\n        activities\n        cover {\n          childImageSharp {\n            fluid(maxWidth: 1920, quality: 90) {\n              ...GatsbyImageSharpFluid_withWebp\n            }\n            resize(width: 1200, quality: 90) {\n              src\n            }\n          }\n        }\n        landscape {\n          childImageSharp {\n            fluid(maxWidth: 1920, quality: 90) {\n              ...GatsbyImageSharpFluid_withWebp\n            }\n            resize(width: 1200, quality: 90) {\n              src\n            }\n          }\n        }\n      }\n      fields {\n        slug\n        sourceInstanceName\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}
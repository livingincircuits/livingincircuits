{"version":3,"sources":["webpack:///./src/templates/project.jsx","webpack:///./src/components/Suggestions.jsx"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_image__WEBPACK_IMPORTED_MODULE_2__","gatsby_image__WEBPACK_IMPORTED_MODULE_2___default","elements__WEBPACK_IMPORTED_MODULE_5__","_components_Suggestions__WEBPACK_IMPORTED_MODULE_6__","Project","_ref","_ref$pageContext","pageContext","slug","left","right","postNode","data","markdownRemark","post","frontmatter","fluid","landscape","childImageSharp","id","a","createElement","postPath","postSEO","className","customer","task","company","activities","type","input","html","propTypes","PropTypes","shape","string","isRequired","object","gatsby__WEBPACK_IMPORTED_MODULE_2__","Suggestions","to","fields","title","any"],"mappings":"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","file":"component---src-templates-project-jsx-9bdef01b936c2b203c76.js","sourcesContent":["/* eslint max-len: 0 */\n/* eslint react/no-unescaped-entities: 0 */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Img from 'gatsby-image';\nimport { Link, graphql } from 'gatsby';\nimport Header from '../components/Header';\nimport { SEO, Content, Layout } from 'elements';\nimport Suggestions from '../components/Suggestions';\n\nconst Project = ({ pageContext: { slug, left, right }, data: { markdownRemark: postNode } }) => {\n  const post = postNode.frontmatter;\n  const { fluid } = post.landscape.childImageSharp;\n  if (!post.id) {\n    post.id = slug;\n  }\n  return (\n    <Layout>\n\n      <SEO postPath={slug} postNode={postNode} postSEO />\n\n      <div className=\"page-inner\">\n\n        <ul className=\"project__meta\">\n          <li className=\"project__meta-item\">\n            <h1>Client</h1>\n            {post.customer}\n          </li>\n          <li className=\"project__meta-item\">\n            <h1>Role</h1>\n            {post.task}\n          </li>\n          <li className=\"project__meta-item\">\n            <h1>Team</h1>\n            {post.company}\n          </li>\n        </ul>\n\n        <section className=\"project__img\">\n          <Img fluid={fluid} />\n        </section>\n\n        <section className=\"callout\">\n          <div className=\"page-content align-central\">\n            <h2 className=\"callout__title\">Activities</h2>\n            <p>\n              {post.activities}\n            </p>\n          </div>\n        </section>\n\n        <div className=\"page-text\">\n          <article className=\"content page-content\" type=\"article\">\n            <Content input={postNode.html} />\n          </article>\n        </div>\n\n        <section>\n          <h3 className=\"heading align-central\">\n            More Projects\n          </h3>\n          <Suggestions left={left} right={right} />\n        </section>\n\n      </div>\n\n    </Layout>\n  );\n};\n\nexport default Project;\n\nProject.propTypes = {\n  pageContext: PropTypes.shape({\n    slug: PropTypes.string.isRequired,\n  }).isRequired,\n  data: PropTypes.shape({\n    markdownRemark: PropTypes.object.isRequired,\n  }).isRequired,\n};\n\nexport const pageQuery = graphql`\n  query ProjectPostBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        date(formatString: \"DD.MM.YYYY\")\n        customer\n        task\n        company\n        activities\n        cover {\n          childImageSharp {\n            fluid(maxWidth: 1920, quality: 90) {\n              ...GatsbyImageSharpFluid_withWebp\n            }\n            resize(width: 1200, quality: 90) {\n              src\n            }\n          }\n        }\n        landscape {\n          childImageSharp {\n            fluid(maxWidth: 1920, quality: 90) {\n              ...GatsbyImageSharpFluid_withWebp\n            }\n            resize(width: 1200, quality: 90) {\n              src\n            }\n          }\n        }\n      }\n      fields {\n        slug\n        sourceInstanceName\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\n\nconst Suggestions = ({ left, right }) => (\n\n  <div className=\"post-block post-block--half\">\n\n    {left && (\n      <Link className=\"post-block__item\" to={left.fields.slug}>\n\n        <article className=\"post-block__bordered\">\n\n          <div className=\"post-block__content\">\n            <h2 className=\"post-block__title\">\n              {left.frontmatter.title}\n            </h2>\n          </div>\n\n        </article>\n\n      </Link>\n    )}\n\n    {right && (\n      <Link className=\"post-block__item\" to={right.fields.slug}>\n\n        <article className=\"post-block__bordered\">\n\n          <div className=\"post-block__content\">\n            <h2 className=\"post-block__title\">\n              {right.frontmatter.title}\n            </h2>\n          </div>\n\n        </article>\n\n      </Link>\n    )}\n\n  </div>\n\n);\n\nexport default Suggestions;\n\nSuggestions.propTypes = {\n  left: PropTypes.any.isRequired,\n  right: PropTypes.any.isRequired,\n};\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/components/ItemProject.jsx","webpack:///./src/pages/projects.jsx"],"names":["ItemProject","cover","path","title","className","to","fluid","viewBox","version","preserveAspectRatio","xmlns","id","x","y","width","height","dx","dy","pageQuery","Projects","edges","data","allMarkdownRemark","Helmet","config","siteTitle","Header","map","project","key","node","frontmatter","fields","slug","childImageSharp","customer"],"mappings":"oPAqCeA,EAhCK,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAMC,EAAhB,EAAgBA,MAAhB,OAElB,yBAAKC,UAAU,QAEb,kBAAC,IAAD,CAAMA,UAAU,aAAaC,GAAIH,GAE/B,kBAAC,IAAD,CAAKE,UAAU,YAAYE,MAAOL,IAElC,wBAAIG,UAAU,iBACXD,GAGH,yBAAKC,UAAU,eAEb,yBAAKG,QAAQ,aAAaC,QAAQ,MAAMC,oBAAoB,OAAOC,MAAM,8BACvE,8BACE,0BAAMC,GAAG,OAAOC,EAAE,IAAIC,EAAE,IAAIC,MAAM,OAAOC,OAAO,QAC9C,0BAAMJ,GAAG,QAAQC,EAAE,IAAIC,EAAE,IAAIC,MAAM,OAAOC,OAAO,SACjD,0BAAMX,UAAU,QAAQY,GAAG,MAAMC,GAAG,SAApC,gBAGJ,0BAAMN,GAAG,OAAOC,EAAE,IAAIC,EAAE,IAAIC,MAAM,OAAOC,OAAO,c,YCiC7CG,GAVEC,UAxCE,SAAC,GAAD,IAEQC,EAFR,EACfC,KACEC,kBAAqBF,MAFR,OAKf,kBAAC,IAAD,KAEE,kBAACG,EAAA,EAAD,CAAQpB,MAAK,cAAgBqB,IAAOC,YAEpC,kBAACC,EAAA,EAAD,CAAQvB,MAAM,YAAd,YAIA,6BAASC,UAAU,cAEjB,yBAAKA,UAAU,8BAEb,2GAMF,yBAAKA,UAAU,eACZgB,EAAMO,KAAI,SAAAC,GAAO,OAChB,kBAAC,EAAD,CACEC,IAAKD,EAAQE,KAAKC,YAAY5B,MAC9BD,KAAM0B,EAAQE,KAAKE,OAAOC,KAC1BhC,MAAO2B,EAAQE,KAAKC,YAAY9B,MAAMiC,gBAAgB5B,MACtD6B,SAAUP,EAAQE,KAAKC,YAAYI,SACnChC,MAAOyB,EAAQE,KAAKC,YAAY5B,eAoBtB","file":"component---src-pages-projects-jsx-557dae0401617b9d0570.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport Img from 'gatsby-image';\n\nconst ItemProject = ({ cover, path, title }) => (\n\n  <div className=\"card\">\n\n    <Link className=\"card__link\" to={path}>\n\n      <Img className=\"card__img\" fluid={cover} />\n\n      <h2 className=\"card__project\">\n        {title}\n      </h2>\n\n      <div className=\"card__title\">\n\n        <svg viewBox=\"0 0 400 90\" version=\"1.1\" preserveAspectRatio=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <defs>\n            <mask id=\"mask\" x=\"0\" y=\"0\" width=\"100%\" height=\"100%\">\n              <rect id=\"alpha\" x=\"0\" y=\"0\" width=\"100%\" height=\"100%\"></rect>\n              <text className=\"title\" dx=\"50%\" dy=\"1.3em\">Case Study</text>\n            </mask>\n          </defs>\n          <rect id=\"base\" x=\"0\" y=\"0\" width=\"100%\" height=\"100%\"></rect>\n        </svg>\n\n      </div>\n\n    </Link>\n\n  </div>\n\n);\n\nexport default ItemProject;\n\nItemProject.propTypes = {\n  cover: PropTypes.any.isRequired,\n  path: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\nimport { Helmet } from 'react-helmet';\nimport { Layout } from 'elements';\nimport config from '../../config/website';\nimport ItemProject from '../components/ItemProject';\nimport Header from '../components/Header';\n\nconst Projects = ({\n  data: {\n    allMarkdownRemark: { edges },\n  },\n}) => (\n  <Layout>\n\n    <Helmet title={`Projects | ${config.siteTitle}`} />\n\n    <Header title=\"Projects\">\n      Projects\n    </Header>\n\n    <section className=\"page-inner\">\n\n      <div className=\"page-content align-central\">\n\n        <p>\n          The below is a sample of work that I am able to share in the public domain.\n        </p>\n\n      </div>\n\n      <div className=\"card-column\">\n        {edges.map(project => (\n          <ItemProject\n            key={project.node.frontmatter.title}\n            path={project.node.fields.slug}\n            cover={project.node.frontmatter.cover.childImageSharp.fluid}\n            customer={project.node.frontmatter.customer}\n            title={project.node.frontmatter.title}\n          />\n        ))}\n      </div>\n\n    </section>\n\n  </Layout>\n);\n\nexport default Projects;\n\nProjects.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.array.isRequired,\n    }),\n  }).isRequired,\n};\n\nexport const pageQuery = graphql`\n  query ProjectsQuery {\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { fields: { sourceInstanceName: { eq: \"projects\" } } }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            customer\n            cover {\n              childImageSharp {\n                fluid(maxWidth: 900, quality: 90) {\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}
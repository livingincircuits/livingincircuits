{"version":3,"sources":["webpack:///./src/components/ItemProject.jsx","webpack:///./src/pages/projects.jsx"],"names":["ItemProject","_ref","cover","path","title","react_default","a","createElement","className","gatsby_browser_entry","to","gatsby_image_default","fluid","viewBox","version","preserveAspectRatio","xmlns","id","x","y","width","height","dx","dy","propTypes","PropTypes","any","isRequired","string","__webpack_require__","d","__webpack_exports__","pageQuery","Projects","edges","data","allMarkdownRemark","src_elements","Helmet_default","config","siteTitle","Header","map","project","components_ItemProject","key","node","frontmatter","fields","slug","childImageSharp","customer","shape","array"],"mappings":"8MAKMA,EAAc,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,MAAOC,EAAVF,EAAUE,KAAMC,EAAhBH,EAAgBG,MAAhB,OAElBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAEbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMD,UAAU,aAAaE,GAAIP,GAE/BE,EAAAC,EAAAC,cAACI,EAAAL,EAAD,CAAKE,UAAU,YAAYI,MAAOV,IAElCG,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBACXJ,GAGHC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAEbH,EAAAC,EAAAC,cAAA,OAAKM,QAAQ,aAAaC,QAAQ,MAAMC,oBAAoB,OAAOC,MAAM,8BACvEX,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,QAAMU,GAAG,OAAOC,EAAE,IAAIC,EAAE,IAAIC,MAAM,OAAOC,OAAO,QAC9ChB,EAAAC,EAAAC,cAAA,QAAMU,GAAG,QAAQC,EAAE,IAAIC,EAAE,IAAIC,MAAM,OAAOC,OAAO,SACjDhB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAQc,GAAG,MAAMC,GAAG,SAApC,gBAGJlB,EAAAC,EAAAC,cAAA,QAAMU,GAAG,OAAOC,EAAE,IAAIC,EAAE,IAAIC,MAAM,OAAOC,OAAO,cAW3CrB,IAEfA,EAAYwB,UAAY,CACtBtB,MAAOuB,IAAUC,IAAIC,WACrBxB,KAAMsB,IAAUG,OAAOD,WACvBvB,MAAOqB,IAAUG,OAAOD,yBC1C1BE,EAAAC,EAAAC,EAAA,8BAAAC,IASA,IAAMC,EAAW,SAAAhC,GAAA,IAEQiC,EAFRjC,EACfkC,KACEC,kBAAqBF,MAFR,OAKf7B,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,KAEEhC,EAAAC,EAAAC,cAAC+B,EAAAhC,EAAD,CAAQF,MAAK,cAAgBmC,IAAOC,YAEpCnC,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAQrC,MAAM,YAAd,YAIAC,EAAAC,EAAAC,cAAA,WAASC,UAAU,cAEjBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BAEbH,EAAAC,EAAAC,cAAA,yFAMFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACZ0B,EAAMQ,IAAI,SAAAC,GAAO,OAChBtC,EAAAC,EAAAC,cAACqC,EAAD,CACEC,IAAKF,EAAQG,KAAKC,YAAY3C,MAC9BD,KAAMwC,EAAQG,KAAKE,OAAOC,KAC1B/C,MAAOyC,EAAQG,KAAKC,YAAY7C,MAAMgD,gBAAgBtC,MACtDuC,SAAUR,EAAQG,KAAKC,YAAYI,SACnC/C,MAAOuC,EAAQG,KAAKC,YAAY3C,cAU7B6B,YAEfA,EAAST,UAAY,CACnBW,KAAMV,IAAU2B,MAAM,CACpBhB,kBAAmBX,IAAU2B,MAAM,CACjClB,MAAOT,IAAU4B,MAAM1B,eAExBA,YAGE,IAAMK,EAAS","file":"component---src-pages-projects-jsx-5e4fade19989ba4dbd91.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport Img from 'gatsby-image';\n\nconst ItemProject = ({ cover, path, title }) => (\n\n  <div className=\"card\">\n\n    <Link className=\"card__link\" to={path}>\n\n      <Img className=\"card__img\" fluid={cover} />\n\n      <h2 className=\"card__project\">\n        {title}\n      </h2>\n\n      <div className=\"card__title\">\n\n        <svg viewBox=\"0 0 400 90\" version=\"1.1\" preserveAspectRatio=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <defs>\n            <mask id=\"mask\" x=\"0\" y=\"0\" width=\"100%\" height=\"100%\">\n              <rect id=\"alpha\" x=\"0\" y=\"0\" width=\"100%\" height=\"100%\"></rect>\n              <text className=\"title\" dx=\"50%\" dy=\"1.3em\">Case Study</text>\n            </mask>\n          </defs>\n          <rect id=\"base\" x=\"0\" y=\"0\" width=\"100%\" height=\"100%\"></rect>\n        </svg>\n\n      </div>\n\n    </Link>\n\n  </div>\n\n);\n\nexport default ItemProject;\n\nItemProject.propTypes = {\n  cover: PropTypes.any.isRequired,\n  path: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\nimport Helmet from 'react-helmet';\nimport { Layout } from 'elements';\nimport config from '../../config/website';\nimport ItemProject from '../components/ItemProject';\nimport Header from '../components/Header';\n\nconst Projects = ({\n  data: {\n    allMarkdownRemark: { edges },\n  },\n}) => (\n  <Layout>\n\n    <Helmet title={`Projects | ${config.siteTitle}`} />\n\n    <Header title=\"Projects\">\n      Projects\n    </Header>\n\n    <section className=\"page-inner\">\n\n      <div className=\"page-content align-central\">\n\n        <p>\n          The below is a sample of work that I am able to share in the public domain.\n        </p>\n\n      </div>\n\n      <div className=\"card-column\">\n        {edges.map(project => (\n          <ItemProject\n            key={project.node.frontmatter.title}\n            path={project.node.fields.slug}\n            cover={project.node.frontmatter.cover.childImageSharp.fluid}\n            customer={project.node.frontmatter.customer}\n            title={project.node.frontmatter.title}\n          />\n        ))}\n      </div>\n\n    </section>\n\n  </Layout>\n);\n\nexport default Projects;\n\nProjects.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.array.isRequired,\n    }),\n  }).isRequired,\n};\n\nexport const pageQuery = graphql`\n  query ProjectsQuery {\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { fields: { sourceInstanceName: { eq: \"projects\" } } }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            customer\n            cover {\n              childImageSharp {\n                fluid(maxWidth: 900, quality: 90) {\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}
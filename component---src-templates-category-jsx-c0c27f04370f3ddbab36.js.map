{"version":3,"sources":["webpack:///./src/components/ItemTagCategory.jsx","webpack:///./src/templates/category.jsx"],"names":["ItemTagCategory","category","path","title","date","timeToRead","excerpt","className","to","pageQuery","Category","pageContext","data","allMarkdownRemark","edges","totalCount","Helmet","config","siteTitle","Header","map","edge","key","node","frontmatter","fields","slug"],"mappings":"2OA6BeA,G,UAxBS,SAAC,GAAD,EAAGC,SAAH,IAAaC,EAAb,EAAaA,KAAMC,EAAnB,EAAmBA,MAAOC,EAA1B,EAA0BA,KAAMC,EAAhC,EAAgCA,WAAYC,EAA5C,EAA4CA,QAA5C,OAEtB,kBAAC,IAAD,CAAMC,UAAU,mBAAmBC,GAAIN,GAErC,6BAASK,UAAU,wBAEjB,yBAAKA,UAAU,uBACb,wBAAIA,UAAU,qBACXJ,GAEH,uBAAGI,UAAU,oBACVH,EADH,oBACgCC,EADhC,QAGA,uBAAGE,UAAU,oBACVD,QC8CEG,GAbEC,UA3CE,SAAC,GAAD,IACAT,EADA,EACfU,YAAeV,SADA,IAEfW,KACEC,kBAAqBC,EAHR,EAGQA,MAHR,EAGeC,WAHf,OAOf,kBAAC,IAAD,KAEE,kBAACC,EAAA,EAAD,CAAQb,MAAUF,EAAL,MAAmBgB,IAAOC,YAEvC,kBAACC,EAAA,EAAD,CAAQhB,MAAOF,GAAf,YAIA,6BAASM,UAAU,cACjB,yBAAKA,UAAU,+BACZO,EAAMM,KAAI,SAAAC,GAAI,OACb,kBAAC,EAAD,CACEC,IAAKD,EAAKE,KAAKC,YAAYrB,MAC3BA,MAAOkB,EAAKE,KAAKC,YAAYrB,MAC7BF,SAAUoB,EAAKE,KAAKC,YAAYvB,SAChCC,KAAMmB,EAAKE,KAAKE,OAAOC,KACvBtB,KAAMiB,EAAKE,KAAKC,YAAYpB,KAC5BC,WAAYgB,EAAKE,KAAKlB,WACtBC,QAASe,EAAKE,KAAKjB,eAM3B,yBAAKC,UAAU,iBAEb,kBAAC,IAAD,CAAMA,UAAU,MAAMC,GAAE,gBAAxB,0BAuBgB","file":"component---src-templates-category-jsx-c0c27f04370f3ddbab36.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport kebabCase from 'lodash/kebabCase';\n\nconst ItemTagCategory = ({ category, path, title, date, timeToRead, excerpt }) => (\n\n  <Link className=\"post-block__item\" to={path}>\n\n    <article className=\"post-block__bordered\">\n\n      <div className=\"post-block__content\">\n        <h2 className=\"post-block__title\">\n          {title}\n        </h2>\n        <p className=\"post-block__date\">\n          {date} &mdash; Time to Read: {timeToRead} Min\n        </p>\n        <p className=\"post-block__text\">\n          {excerpt}\n        </p>\n      </div>\n\n    </article>\n\n  </Link>\n\n);\n\nexport default ItemTagCategory;\n\nItemTagCategory.propTypes = {\n  category: PropTypes.string.isRequired,\n  path: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  timeToRead: PropTypes.number.isRequired,\n  excerpt: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\nimport { Layout } from 'elements';\nimport config from '../../config/website';\nimport Header from '../components/Header';\nimport ItemTagCategory from '../components/ItemTagCategory';\n\nconst Category = ({\n  pageContext: { category },\n  data: {\n    allMarkdownRemark: { edges, totalCount },\n  },\n}) => (\n\n  <Layout>\n\n    <Helmet title={`${category} | ${config.siteTitle}`} />\n\n    <Header title={category}>\n      Category\n    </Header>\n\n    <section className=\"page-inner\">\n      <div className=\"post-block post-block--full\">\n        {edges.map(edge => (\n          <ItemTagCategory\n            key={edge.node.frontmatter.title}\n            title={edge.node.frontmatter.title}\n            category={edge.node.frontmatter.category}\n            path={edge.node.fields.slug}\n            date={edge.node.frontmatter.date}\n            timeToRead={edge.node.timeToRead}\n            excerpt={edge.node.excerpt}\n          />\n        ))}\n      </div>\n    </section>\n\n    <div className=\"align-central\">\n\n      <Link className=\"btn\" to={`/categories/`}>\n        View all Categories\n      </Link>\n\n    </div>\n\n  </Layout>\n\n);\n\nexport default Category;\n\nCategory.propTypes = {\n  pageContext: PropTypes.shape({\n    category: PropTypes.string.isRequired,\n  }).isRequired,\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.array.isRequired,\n    }),\n  }).isRequired,\n};\n\nexport const pageQuery = graphql`\n  query CategoryPage($category: String) {\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { category: { eq: $category } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          excerpt(pruneLength: 170)\n          timeToRead\n          frontmatter {\n            title\n            date(formatString: \"DD. MMMM YYYY\", locale: \"en\")\n            category\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/pages/categories.jsx"],"names":["Categories","_ref","_ref$data$allMarkdown","data","allMarkdownRemark","group","edges","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","elements__WEBPACK_IMPORTED_MODULE_6__","b","react_helmet__WEBPACK_IMPORTED_MODULE_5___default","title","_config_website__WEBPACK_IMPORTED_MODULE_7___default","siteTitle","_components_Header__WEBPACK_IMPORTED_MODULE_8__","className","map","category","class","gatsby__WEBPACK_IMPORTED_MODULE_1__","Link","key","fieldValue","to","lodash_kebabCase__WEBPACK_IMPORTED_MODULE_3___default","totalCount","__webpack_exports__","default","k","propTypes","prop_types__WEBPACK_IMPORTED_MODULE_2___default","shape","array","isRequired","pageQuery"],"mappings":"uQAUMA,EAAa,SAAAC,GAAA,IAAAC,EAAAD,EACjBE,KACEC,kBAAqBC,EAFNH,EAEMG,MAFN,OAAAH,EAEaI,MAG9BC,EAAAC,EAAAC,cAACC,EAAAC,EAAD,KAEEJ,EAAAC,EAAAC,cAACG,EAAAJ,GAAOK,MAAA,cAAqBC,EAAAN,EAAOO,YAEpCR,EAAAC,EAAAC,cAACO,EAAAR,GAAOK,MAAM,cAAd,kBAIAN,EAAAC,EAAAC,cAAA,MAAIQ,UAAU,iBACXZ,EAAMa,IAAI,SAAAC,GAAA,OACTZ,EAAAC,EAAAC,cAAA,MAAIW,MAAM,WACRb,EAAAC,EAAAC,cAACY,EAAAC,MAAKC,IAAKJ,EAASK,WAAYC,GAAA,eAAmBC,IAAUP,EAASK,aACnEL,EAASK,WADZ,IACwBjB,EAAAC,EAAAC,cAAA,gBAAQU,EAASQ,mBASnDC,EAAAC,QAAAC,EAEA9B,EAAW+B,WACT5B,KAAM6B,EAAAxB,EAAUyB,OACd7B,kBAAmB4B,EAAAxB,EAAUyB,OAC3B5B,MAAO2B,EAAAxB,EAAU0B,MAAMC,WACvB7B,MAAO0B,EAAAxB,EAAU0B,MAAMC,eAExBA,YAGE,IAAMC","file":"component---src-pages-categories-jsx-24b4d64f6b5a7f57b2fd.js","sourcesContent":["import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport kebabCase from 'lodash/kebabCase';\nimport size from 'lodash/size';\nimport Helmet from 'react-helmet';\nimport { Layout } from 'elements';\nimport config from '../../config/website';\nimport Header from '../components/Header';\n\nconst Categories = ({\n  data: {\n    allMarkdownRemark: { group, edges },\n  },\n}) => (\n  <Layout>\n\n    <Helmet title={`Category | ${config.siteTitle}`} />\n\n    <Header title=\"Categories\">\n      All Categories\n    </Header>\n\n    <ul className=\"align-central\">\n      {group.map(category => (\n        <li class=\"content\">\n          <Link key={category.fieldValue} to={`/categories/${kebabCase(category.fieldValue)}`}>\n            {category.fieldValue} <span> {category.totalCount}</span>\n          </Link>\n        </li>\n      ))}\n    </ul>\n\n  </Layout>\n);\n\nexport default Categories;\n\nCategories.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      group: PropTypes.array.isRequired,\n      edges: PropTypes.array.isRequired,\n    }),\n  }).isRequired,\n};\n\nexport const pageQuery = graphql`\n  query CategoriesPage {\n    allMarkdownRemark(filter: { fields: { sourceInstanceName: { eq: \"blog\" } } }) {\n      group(field: frontmatter___category) {\n        fieldValue\n        totalCount\n      }\n      edges {\n        node {\n          id\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}